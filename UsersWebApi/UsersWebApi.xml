<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UsersWebApi</name>
    </assembly>
    <members>
        <member name="T:UsersWebApi.Controllers.UsersController">
            <summary>
            Controller to perfoms CRUD operation on the user entity
            </summary>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.GetActiveUsers(System.String,System.String)">
            <summary>
            Get all active users
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <response code="200">Return all active users. Possible to return an empty list</response>
            <response code="400">Person executing the request is not admin</response>
            <response code="401">Person executing the request is unauthorized</response>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.GetByLogin(System.String,System.String,System.String)">
            <summary>
            Get user by his login
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToSearch">Login of the user that we need to find</param>
            <response code="200">Return user</response>
            <response code="400">Person executing the request is not admin</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.GetByLoginAndPassword(System.String,System.String)">
            <summary>
            Get user by his login and password
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <response code="200">Return user</response>
            <response code="400">User is not active</response>
            <response code="401">Person executing the request is unauthorized</response>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.GetOlderThanAge(System.String,System.String,System.Int32)">
            <summary>
            Get users who are older than a specific age
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="age">specific age</param>
            <response code="200">Return users which older than age. Possible to return an empty list</response>
            <response code="400">User in not active or input age is incorrected</response>
            <response code="401">Person executing the request is unauthorized</response>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.CreateNewUser(System.String,System.String,UsersWebApi.DTO.UsersCreateDTO)">
            <summary>
            Create a new user
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="newUser">new user's data</param>
            <response code="201">Creates user</response>
            <response code="400">Person executing the request is not admin or new login is already taken</response>
            <response code="401">Person executing the request is unauthorized</response>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.UpdateUserData(System.String,System.String,System.String,UsersWebApi.DTO.UsersUpdateDTO)">
            <summary>
            Update user's name, gender or birthday
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToFind">Login of the user that we need to find</param>
            <param name="userData">User to update parameters</param>
            <response code="204">Updates user</response>
            <response code="400">Person executing the request is not admin or not active</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.UpdateUserPassword(System.String,System.String,System.String,System.String)">
            <summary>
            Update user's password
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToFind">Login of the user that we need to find</param>
            <param name="newPassword">new user's password</param>
            <response code="204">Updates user's password</response>
            <response code="400">Person executing the request is not admin or not active 
            or unable to change password due to error validation</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.UpdateUserLogin(System.String,System.String,System.String,System.String)">
            <summary>
            Update user's login
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToFind">Login of the user that we need to find</param>
            <param name="newLogin">New user's login</param>
            <response code="204">Updates user's login</response>
            <response code="400">Person executing the request is not admin or is not active
            or unable to change login due to validation error or the login is already taken</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.RecoverUser(System.String,System.String,System.String)">
            <summary>
            Recover user's activity after soft deletion
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToFind">Login of the user that we need to find</param>
            <response code="204">Makes the user active</response>
            <response code="400">Person executing the request is not admin</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
        <member name="M:UsersWebApi.Controllers.UsersController.DeleteUser(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Delete the user softly (change his activity)
            </summary>
            <param name="login">Login of the person executing the request</param>
            <param name="password">Password of the person executing the request</param>
            <param name="loginToDelete">Login of the user that we need to find and delete</param>
            <param name="isSoft">Parameter that specifies how to delete the user (softly or completely)</param>
            <response code="204">Deletes user softly or completely</response>
            <response code="400">Person executing the request is not admin</response>
            <response code="401">Person executing the request is unauthorized</response>
            <respone code="404">User does not exist</respone>
        </member>
    </members>
</doc>
